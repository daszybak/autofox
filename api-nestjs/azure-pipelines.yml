# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '6d92ac4a-b7f1-4f33-8a26-e179f7be1014'
  imageRepository: 'apinestjs'
  containerRegistry: 'autofox.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

          - task: PublishPipelineArtifact@1
            inputs:
              artifactName: '.k8s'
              path: '.k8s'

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy job
        pool:
          vmImage: $(vmImageName)
        environment: 'apinestjs' #customize with your environment
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    artifactName: '.k8s'
                    downloadPath: '$(System.ArtifactsDirectory)/.k8s'

                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    kubernetesServiceConnection: manual-aks
                    action: deploy
                    namespace: default
                    manifests: |
                      $(System.ArtifactsDirectory)/.k8s/deployment.yaml
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)
